{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/storage.service\";\nimport * as i2 from \"@angular/forms\";\nexport class HomeComponent {\n  constructor(service) {\n    this.service = service;\n    this.resumeForm = new FormGroup({\n      resume: new FormControl(\"\", Validators.required)\n    });\n  }\n  Upload() {\n    let data = this.resumeForm.value;\n    this.service.uploadResume(data).subscribe(result => {\n      alert('You resume succefully uploaded'), error;\n      any;\n    });\n    {\n      console.log(error);\n    }\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.StorageService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 6,\n    vars: 0,\n    consts: [[1, \"container\"], [1, \"row\"], [\"action\", \"\"], [\"for\", \"a\"], [\"type\", \"file\", \"id\", \"a\", 1, \"form-control\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"form\", 2)(3, \"label\", 3);\n        i0.ɵɵtext(4, \"Upload resume:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(5, \"input\", 4);\n        i0.ɵɵelementEnd()()();\n      }\n    },\n    dependencies: [i2.ɵNgNoValidate, i2.NgControlStatusGroup],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","HomeComponent","constructor","service","resumeForm","resume","required","Upload","data","value","uploadResume","subscribe","result","alert","error","any","console","log","_","i0","ɵɵdirectiveInject","i1","StorageService","_2","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["C:\\Users\\Hafeez\\Desktop\\resume\\frontEnd\\src\\app\\home\\home.component.ts","C:\\Users\\Hafeez\\Desktop\\resume\\frontEnd\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {FormControl,FormGroup,Validators} from '@angular/forms'\nimport { StorageService } from '../service/storage.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  \n  constructor(private service:StorageService){}\n  resumeForm=new FormGroup({\n    resume:new FormControl(\"\",Validators.required)\n  })\n\n  Upload(){\n    let data=this.resumeForm.value\n    this.service.uploadResume(data).subscribe((result:any)=>{\n      alert('You resume succefully uploaded'),\n      error:any)=>{console.log(error);\n      }\n\n    })\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <form action=\"\">\n            <label for=\"a\">Upload resume:</label>\n            <input type=\"file\" id=\"a\" class=\"form-control\">\n        </form>\n    </div>\n</div>\n"],"mappings":"AACA,SAAQA,WAAW,EAACC,SAAS,EAACC,UAAU,QAAO,gBAAgB;;;;AAS/D,OAAM,MAAOC,aAAa;EAExBC,YAAoBC,OAAsB;IAAtB,KAAAA,OAAO,GAAPA,OAAO;IAC3B,KAAAC,UAAU,GAAC,IAAIL,SAAS,CAAC;MACvBM,MAAM,EAAC,IAAIP,WAAW,CAAC,EAAE,EAACE,UAAU,CAACM,QAAQ;KAC9C,CAAC;EAH0C;EAK5CC,MAAMA,CAAA;IACJ,IAAIC,IAAI,GAAC,IAAI,CAACJ,UAAU,CAACK,KAAK;IAC9B,IAAI,CAACN,OAAO,CAACO,YAAY,CAACF,IAAI,CAAC,CAACG,SAAS,CAAEC,MAAU,IAAG;MACtDC,KAAK,CAAC,gCAAgC,CAAC,EACvCC,KAAK;MAACC,GAAG;IAAA,CAAC;IAAE;MAACC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;;EAGjC;EAAC,QAAAI,CAAA,G;qBAdQjB,aAAa,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAbtB,aAAa;IAAAuB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV1BX,EAAA,CAAAa,cAAA,aAAuB;QAGIb,EAAA,CAAAc,MAAA,qBAAc;QAAAd,EAAA,CAAAe,YAAA,EAAQ;QACrCf,EAAA,CAAAgB,SAAA,eAA+C;QACnDhB,EAAA,CAAAe,YAAA,EAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}