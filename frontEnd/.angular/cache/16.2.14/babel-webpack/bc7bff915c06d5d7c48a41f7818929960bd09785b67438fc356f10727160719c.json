{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class StorageService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8000/api/';\n  }\n  get headers() {\n    let authToken = localStorage.getItem('token');\n    let headers = authToken ? new HttpHeaders().set('Authorization', authToken) : undefined;\n    return headers;\n  }\n  signUp(data) {\n    return this.http.post(`${this.baseUrl}register/`, data);\n  }\n  signIn(data) {\n    return this.http.post(`${this.baseUrl}generate-token/`, data);\n  }\n  uploadResume(data) {\n    return this.http.post(`${this.baseUrl}resume/`, data, {\n      'headers': this.headers\n    });\n  }\n  isResumealreadyUploaded(data) {\n    return this.http.post(`${this.baseUrl}resume/`, data, {\n      'headers': this.headers\n    });\n  }\n  static #_ = this.ɵfac = function StorageService_Factory(t) {\n    return new (t || StorageService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StorageService,\n    factory: StorageService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","StorageService","constructor","http","baseUrl","headers","authToken","localStorage","getItem","set","undefined","signUp","data","post","signIn","uploadResume","isResumealreadyUploaded","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Hafeez\\Desktop\\resume\\frontEnd\\src\\app\\service\\storage.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n  baseUrl='http://localhost:8000/api/'\n  constructor(private http:HttpClient) { }\n\n  get headers(){\n    let authToken=localStorage.getItem('token')\n    let headers=authToken?new HttpHeaders().set('Authorization',authToken):undefined\n    return headers\n  }\n  \n  signUp(data:any){\n    return this.http.post(`${this.baseUrl}register/`,data)\n  }\n\n  signIn(data:any){\n    return this.http.post(`${this.baseUrl}generate-token/`,data)\n  }\n\n  uploadResume(data:any){\n    return this.http.post(`${this.baseUrl}resume/`,data,{'headers':this.headers})\n  }\n\n  isResumealreadyUploaded(data:any){\n    return this.http.post(`${this.baseUrl}resume/`,data,{'headers':this.headers})\n  }\n\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAK9D,OAAM,MAAOC,cAAc;EAEzBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IADxB,KAAAC,OAAO,GAAC,4BAA4B;EACG;EAEvC,IAAIC,OAAOA,CAAA;IACT,IAAIC,SAAS,GAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,IAAIH,OAAO,GAACC,SAAS,GAAC,IAAIN,WAAW,EAAE,CAACS,GAAG,CAAC,eAAe,EAACH,SAAS,CAAC,GAACI,SAAS;IAChF,OAAOL,OAAO;EAChB;EAEAM,MAAMA,CAACC,IAAQ;IACb,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,GAAG,IAAI,CAACT,OAAO,WAAW,EAACQ,IAAI,CAAC;EACxD;EAEAE,MAAMA,CAACF,IAAQ;IACb,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,GAAG,IAAI,CAACT,OAAO,iBAAiB,EAACQ,IAAI,CAAC;EAC9D;EAEAG,YAAYA,CAACH,IAAQ;IACnB,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,GAAG,IAAI,CAACT,OAAO,SAAS,EAACQ,IAAI,EAAC;MAAC,SAAS,EAAC,IAAI,CAACP;IAAO,CAAC,CAAC;EAC/E;EAEAW,uBAAuBA,CAACJ,IAAQ;IAC9B,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CAAC,GAAG,IAAI,CAACT,OAAO,SAAS,EAACQ,IAAI,EAAC;MAAC,SAAS,EAAC,IAAI,CAACP;IAAO,CAAC,CAAC;EAC/E;EAAC,QAAAY,CAAA,G;qBAxBUhB,cAAc,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdrB,cAAc;IAAAsB,OAAA,EAAdtB,cAAc,CAAAuB,IAAA;IAAAC,UAAA,EAFb;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}