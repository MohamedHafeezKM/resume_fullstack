{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/storage.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" You should check in on some of those fields above. \");\n    i0.ɵɵelement(4, \"button\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.errorMessage);\n  }\n}\nexport class LoginComponent {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n    this.LoginForm = new FormGroup({\n      username: new FormControl(\"\", Validators.required),\n      password: new FormControl(\"\", [Validators.required, Validators.minLength(6)])\n    });\n  }\n  login() {\n    let data = this.LoginForm.value;\n    this.service.signIn(data).subscribe(res => {\n      let tkn = res.token;\n      let token = `Token ${tkn}`;\n      localStorage.setItem('token', token);\n      alert('You have Logged in successfully');\n      this.router.navigateByUrl('');\n    }, error => {\n      console.log(error);\n      error.error.non_field_errors.forEach(p => this.errorMessage = p);\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.StorageService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 20,\n    vars: 3,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-lg-4\"], [1, \"col-lg-4\", \"col-12\", \"bg-danger\", \"border\", \"border-2\", \"p-4\", \"shadow\"], [1, \"text-center\"], [\"action\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"a\"], [\"type\", \"text\", \"placeholder\", \"Username\", \"formControlName\", \"username\", \"id\", \"a\", 1, \"form-control\"], [1, \"mt-4\"], [\"for\", \"b\"], [\"type\", \"password\", \"placeholder\", \"Password\", \"formControlName\", \"password\", \"id\", \"b\", 1, \"form-control\"], [1, \"d-grid\", \"gap-2\", \"mt-4\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"alert alert-danger alert-dismissible fade show\", \"role\", \"alert\", 4, \"ngIf\"], [\"role\", \"alert\", 1, \"alert\", \"alert-danger\", \"alert-dismissible\", \"fade\", \"show\"], [\"type\", \"button\", \"data-bs-dismiss\", \"alert\", \"aria-label\", \"Close\", 1, \"btn-close\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"h2\", 4);\n        i0.ɵɵtext(5, \"Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_6_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(7, \"div\")(8, \"label\", 6);\n        i0.ɵɵtext(9, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 8)(12, \"label\", 9);\n        i0.ɵɵtext(13, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 11)(16, \"button\", 12);\n        i0.ɵɵtext(17, \"Login\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(18, LoginComponent_div_18_Template, 5, 1, \"div\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"div\", 2);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.LoginForm);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"disabled\", ctx.LoginForm.invalid);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","errorMessage","LoginComponent","constructor","service","router","LoginForm","username","required","password","minLength","login","data","value","signIn","subscribe","res","tkn","token","localStorage","setItem","alert","navigateByUrl","error","console","log","non_field_errors","forEach","p","_","ɵɵdirectiveInject","i1","StorageService","i2","Router","_2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_6_listener","ɵɵtemplate","LoginComponent_div_18_Template","ɵɵproperty","invalid"],"sources":["C:\\Users\\Hafeez\\Desktop\\resume\\frontEnd\\src\\app\\login\\login.component.ts","C:\\Users\\Hafeez\\Desktop\\resume\\frontEnd\\src\\app\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {FormControl,FormGroup,Validators} from '@angular/forms'\nimport { StorageService } from '../service/storage.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n  errorMessage:any\n  constructor(private service:StorageService,private router:Router){}\n\n  LoginForm=new FormGroup({\n    username:new FormControl(\"\",Validators.required),\n    password:new FormControl(\"\",[Validators.required,Validators.minLength(6)])\n  })\n\n  login(){\n    let data=this.LoginForm.value\n    this.service.signIn(data).subscribe((res:any)=>{\n      let tkn=res.token\n      let token=`Token ${tkn}`\n      localStorage.setItem('token',token)\n\n      alert('You have Logged in successfully')\n      this.router.navigateByUrl('')\n    },error=>{\n      console.log(error);\n      error.error.non_field_errors.forEach((p:any)=>\n      this.errorMessage=p)\n      \n    })\n    \n\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-lg-4\"></div>\n        <div class=\"col-lg-4 col-12 bg-danger border border-2 p-4 shadow\">\n            <h2 class=\"text-center\">Login</h2>\n            <form [formGroup]=\"LoginForm\" (ngSubmit)=\"login()\" action=\"\">\n                <div>\n                    <label for=\"a\">Username</label>\n                    <input type=\"text\" placeholder=\"Username\" formControlName=\"username\" id=\"a\" class=\"form-control\">\n                </div>\n                <div class=\"mt-4\">\n                    <label for=\"b\">Password</label>\n                    <input type=\"password\" placeholder=\"Password\" formControlName=\"password\" id=\"b\" class=\"form-control\">\n                </div>\n\n                <div class=\"d-grid gap-2 mt-4\">\n                    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"LoginForm.invalid\">Login</button>\n                </div>\n            </form>\n            <div *ngIf=\"errorMessage\" class=\"alert alert-danger alert-dismissible fade show\" role=\"alert\">\n                <strong>{{errorMessage}}</strong> You should check in on some of those fields above.\n                <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n              </div>\n                \n            \n        </div>\n        <div class=\"col-lg-4\"></div>\n        \n    </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}