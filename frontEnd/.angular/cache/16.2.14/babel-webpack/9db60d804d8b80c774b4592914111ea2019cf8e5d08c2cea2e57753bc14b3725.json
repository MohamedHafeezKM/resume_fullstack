{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/storage.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction HomeComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"form\", 5);\n    i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_div_5_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.Upload());\n    });\n    i0.ɵɵelementStart(2, \"label\", 6);\n    i0.ɵɵtext(3, \"Upload resume:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 7);\n    i0.ɵɵelementStart(5, \"div\", 8)(6, \"button\", 9);\n    i0.ɵɵtext(7, \"Upload\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.resumeForm);\n  }\n}\nexport class HomeComponent {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n    this.isUploadedAlready = false;\n    this.resumeForm = new FormGroup({\n      resume: new FormControl(\"\", Validators.required)\n    });\n    // service.isResumealreadyUploaded().subscribe(data=>{\n    //    this.isUploadedAlready=true\n    // })\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.StorageService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 6,\n    vars: 1,\n    consts: [[1, \"container\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"row\"], [\"class\", \"col-lg-6 col-12 mt-5\", 4, \"ngIf\"], [1, \"col-lg-6\", \"col-12\", \"mt-5\"], [\"enctype\", \"multipart/form-data\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"a\"], [\"formControlName\", \"resume\", \"type\", \"file\", \"id\", \"a\", 1, \"form-control\"], [1, \"d-grid\", \"gap-2\", \"mt-5\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"nav\")(2, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_2_listener() {\n          return ctx.signOut();\n        });\n        i0.ɵɵtext(3, \"Sign out\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵtemplate(5, HomeComponent_div_5_Template, 8, 1, \"div\", 3);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.isUploadedAlready == false);\n      }\n    },\n    dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nUpload();\n{\n  let data = this.resumeForm.value;\n  this.service.uploadResume(data).subscribe(result => {\n    alert('You resume succefully uploaded');\n    this.isUploadedAlready = true, error => {\n      console.log(error);\n    };\n  });\n}\nsignOut();\n{\n  localStorage.removeItem('token');\n  this.router.navigateByUrl('login');\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵlistener","HomeComponent_div_5_Template_form_ngSubmit_1_listener","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","Upload","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r0","resumeForm","HomeComponent","constructor","service","router","isUploadedAlready","resume","required","_","ɵɵdirectiveInject","i1","StorageService","i2","Router","_2","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","HomeComponent_Template_button_click_2_listener","signOut","ɵɵtemplate","HomeComponent_div_5_Template","data","value","uploadResume","subscribe","result","alert","error","console","log","localStorage","removeItem","navigateByUrl"],"sources":["C:\\Users\\Hafeez\\Desktop\\resume\\frontEnd\\src\\app\\home\\home.component.ts","C:\\Users\\Hafeez\\Desktop\\resume\\frontEnd\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {FormControl,FormGroup,Validators} from '@angular/forms'\nimport { StorageService } from '../service/storage.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  isUploadedAlready:boolean=false\n  constructor(private service:StorageService,private router:Router){\n  // service.isResumealreadyUploaded().subscribe(data=>{\n  //    this.isUploadedAlready=true\n  // })\n  }\n\n \n\n  resumeForm=new FormGroup({\n    resume:new FormControl(\"\",Validators.required)\n  })\n  }\n  \n\n  Upload(){\n    \n    let data=this.resumeForm.value\n    this.service.uploadResume(data).subscribe((result:any)=>{\n      alert('You resume succefully uploaded')\n      this.isUploadedAlready=true\n      ,\n      (error:any)=>{console.log(error);\n      }\n\n    })\n\n    \n  }\n\n  signOut(){\n    localStorage.removeItem('token')\n    this.router.navigateByUrl('login')\n  }\n \n\n}\n","<div class=\"container\">\n    <nav>\n        <button (click)=\"signOut()\" class=\"btn btn-primary\">Sign out</button>\n    </nav>\n    <div class=\"row\">\n        <div *ngIf=\"isUploadedAlready==false\"  class=\"col-lg-6 col-12 mt-5\">\n            <form [formGroup]=\"resumeForm\" enctype=\"multipart/form-data\" (ngSubmit)=\"Upload()\" >\n            <label for=\"a\">Upload resume:</label>\n            <input  formControlName=\"resume\" type=\"file\" id=\"a\" class=\"form-control\">\n            <div class=\"d-grid gap-2 mt-5\">\n                <button type=\"submit\" class=\"btn btn-primary\">Upload</button>\n            </div>\n        </form>\n        </div>\n    </div>\n</div>\n\n"],"mappings":"AACA,SAAQA,WAAW,EAACC,SAAS,EAACC,UAAU,QAAO,gBAAgB;;;;;;;;;ICIvDC,EAAA,CAAAC,cAAA,aAAoE;IACHD,EAAA,CAAAE,UAAA,sBAAAC,sDAAA;MAAAH,EAAA,CAAAI,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAN,EAAA,CAAAO,aAAA;MAAA,OAAYP,EAAA,CAAAQ,WAAA,CAAAF,MAAA,CAAAG,MAAA,EAAQ;IAAA,EAAC;IAClFT,EAAA,CAAAC,cAAA,eAAe;IAAAD,EAAA,CAAAU,MAAA,qBAAc;IAAAV,EAAA,CAAAW,YAAA,EAAQ;IACrCX,EAAA,CAAAY,SAAA,eAAyE;IACzEZ,EAAA,CAAAC,cAAA,aAA+B;IACmBD,EAAA,CAAAU,MAAA,aAAM;IAAAV,EAAA,CAAAW,YAAA,EAAS;;;;IAJ3DX,EAAA,CAAAa,SAAA,GAAwB;IAAxBb,EAAA,CAAAc,UAAA,cAAAC,MAAA,CAAAC,UAAA,CAAwB;;;ADK1C,OAAM,MAAOC,aAAa;EAExBC,YAAoBC,OAAsB,EAASC,MAAa;IAA5C,KAAAD,OAAO,GAAPA,OAAO;IAAwB,KAAAC,MAAM,GAANA,MAAM;IADzD,KAAAC,iBAAiB,GAAS,KAAK;IAS/B,KAAAL,UAAU,GAAC,IAAIlB,SAAS,CAAC;MACvBwB,MAAM,EAAC,IAAIzB,WAAW,CAAC,EAAE,EAACE,UAAU,CAACwB,QAAQ;KAC9C,CAAC;IATF;IACA;IACA;EACA;EAAC,QAAAC,CAAA,G;qBANUP,aAAa,EAAAjB,EAAA,CAAAyB,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAA3B,EAAA,CAAAyB,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAbb,aAAa;IAAAc,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX1BrC,EAAA,CAAAC,cAAA,aAAuB;QAEPD,EAAA,CAAAE,UAAA,mBAAAqC,+CAAA;UAAA,OAASD,GAAA,CAAAE,OAAA,EAAS;QAAA,EAAC;QAAyBxC,EAAA,CAAAU,MAAA,eAAQ;QAAAV,EAAA,CAAAW,YAAA,EAAS;QAEzEX,EAAA,CAAAC,cAAA,aAAiB;QACbD,EAAA,CAAAyC,UAAA,IAAAC,4BAAA,iBAQM;QACV1C,EAAA,CAAAW,YAAA,EAAM;;;QATIX,EAAA,CAAAa,SAAA,GAA8B;QAA9Bb,EAAA,CAAAc,UAAA,SAAAwB,GAAA,CAAAjB,iBAAA,UAA8B;;;;;;;ADsB1CZ,MAAM,EAAE;AAAA;EAEN,IAAIkC,IAAI,GAAC,IAAI,CAAC3B,UAAU,CAAC4B,KAAK;EAC9B,IAAI,CAACzB,OAAO,CAAC0B,YAAY,CAACF,IAAI,CAAC,CAACG,SAAS,CAAEC,MAAU,IAAG;IACtDC,KAAK,CAAC,gCAAgC,CAAC;IACvC,IAAI,CAAC3B,iBAAiB,GAAC,IAAI,EAE1B4B,KAAS,IAAG;MAACC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAChC,CAAC;EAEH,CAAC,CAAC;;AAKJT,OAAO,EAAE;AAAA;EACPY,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;EAChC,IAAI,CAACjC,MAAM,CAACkC,aAAa,CAAC,OAAO,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}