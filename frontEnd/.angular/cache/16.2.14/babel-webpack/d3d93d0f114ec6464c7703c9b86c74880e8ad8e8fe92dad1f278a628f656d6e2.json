{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nexport let HomeComponent = class HomeComponent {\n  constructor(service) {\n    this.service = service;\n    this.isUploadedAlready = false;\n    this.resumeForm = new FormGroup({\n      resume: new FormControl(\"\", Validators.required)\n    });\n    service.isResumealreadyUploaded().subscribe(data => {\n      this.isUploadedAlready = true;\n    });\n  }\n  Upload() {\n    let data = this.resumeForm.value;\n    this.service.uploadResume(data).subscribe(result => {\n      alert('You resume succefully uploaded');\n      this.isUploadedAlready = true, error => {\n        console.log(error);\n      };\n    });\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","Validators","HomeComponent","constructor","service","isUploadedAlready","resumeForm","resume","required","isResumealreadyUploaded","subscribe","data","Upload","value","uploadResume","result","alert","error","console","log","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Hafeez\\Desktop\\resume\\frontEnd\\src\\app\\home\\home.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport {FormControl,FormGroup,Validators} from '@angular/forms'\nimport { StorageService } from '../service/storage.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  isUploadedAlready:boolean=false\n  constructor(private service:StorageService){\n  service.isResumealreadyUploaded().subscribe(data=>{\n     this.isUploadedAlready=true\n  })\n  }\n  resumeForm=new FormGroup({\n    resume:new FormControl(\"\",Validators.required)\n  })\n\n  Upload(){\n    let data=this.resumeForm.value\n    this.service.uploadResume(data).subscribe((result:any)=>{\n      alert('You resume succefully uploaded')\n      this.isUploadedAlready=true\n      ,\n      (error:any)=>{console.log(error);\n      }\n\n    })\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAAQC,WAAW,EAACC,SAAS,EAACC,UAAU,QAAO,gBAAgB;AASxD,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAExBC,YAAoBC,OAAsB;IAAtB,KAAAA,OAAO,GAAPA,OAAO;IAD3B,KAAAC,iBAAiB,GAAS,KAAK;IAM/B,KAAAC,UAAU,GAAC,IAAIN,SAAS,CAAC;MACvBO,MAAM,EAAC,IAAIR,WAAW,CAAC,EAAE,EAACE,UAAU,CAACO,QAAQ;KAC9C,CAAC;IANFJ,OAAO,CAACK,uBAAuB,EAAE,CAACC,SAAS,CAACC,IAAI,IAAE;MAC/C,IAAI,CAACN,iBAAiB,GAAC,IAAI;IAC9B,CAAC,CAAC;EACF;EAKAO,MAAMA,CAAA;IACJ,IAAID,IAAI,GAAC,IAAI,CAACL,UAAU,CAACO,KAAK;IAC9B,IAAI,CAACT,OAAO,CAACU,YAAY,CAACH,IAAI,CAAC,CAACD,SAAS,CAAEK,MAAU,IAAG;MACtDC,KAAK,CAAC,gCAAgC,CAAC;MACvC,IAAI,CAACX,iBAAiB,GAAC,IAAI,EAE1BY,KAAS,IAAG;QAACC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAChC,CAAC;IAEH,CAAC,CAAC;EACJ;CAED;AAvBYf,aAAa,GAAAkB,UAAA,EALzBtB,SAAS,CAAC;EACTuB,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWrB,aAAa,CAuBzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}