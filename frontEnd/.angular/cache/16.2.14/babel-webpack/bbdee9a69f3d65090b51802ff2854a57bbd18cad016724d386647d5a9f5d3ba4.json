{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/storage.service\";\nimport * as i2 from \"@angular/router\";\nexport class HomeComponent {\n  constructor(service, router) {\n    this.service = service;\n    this.router = router;\n    this.isUploadedAlready = false;\n    this.selectedFile = null;\n    this.resumeForm = new FormGroup({\n      resume: new FormControl(\"\", Validators.required)\n    });\n    // service.isResumealreadyUploaded().subscribe(data=>{\n    //    this.isUploadedAlready=true\n    // })\n  }\n\n  onFileSelected(event) {\n    console.log(event);\n    this.selectedFile = event.target.files[0];\n  }\n  Upload() {\n    const fd = new FormData();\n    fd.append('resume', this.selectedFile, this.selectedFile.name);\n    let data = this.resumeForm.value;\n    this.service.uploadResume(fd).subscribe(result => {\n      alert('You resume succefully uploaded');\n      this.isUploadedAlready = true, error => {\n        console.log(error);\n      };\n    });\n  }\n  signOut() {\n    localStorage.removeItem('token');\n    this.router.navigateByUrl('login');\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.StorageService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 12,\n    vars: 0,\n    consts: [[1, \"container\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"row\"], [1, \"col-lg-6\", \"col-12\", \"mt-5\"], [\"for\", \"a\"], [\"type\", \"file\", \"id\", \"a\", 1, \"form-control\", 3, \"change\"], [1, \"d-grid\", \"gap-2\", \"mt-5\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"nav\")(2, \"button\", 1);\n        i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_2_listener() {\n          return ctx.signOut();\n        });\n        i0.ɵɵtext(3, \"Sign out\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(4, \"div\", 2)(5, \"div\", 3)(6, \"label\", 4);\n        i0.ɵɵtext(7, \"Upload resume:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"input\", 5);\n        i0.ɵɵlistener(\"change\", function HomeComponent_Template_input_change_8_listener($event) {\n          return ctx.onFileSelected($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\", 6)(10, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_10_listener() {\n          return ctx.Upload();\n        });\n        i0.ɵɵtext(11, \"Upload\");\n        i0.ɵɵelementEnd()()()()();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","HomeComponent","constructor","service","router","isUploadedAlready","selectedFile","resumeForm","resume","required","onFileSelected","event","console","log","target","files","Upload","fd","FormData","append","name","data","value","uploadResume","subscribe","result","alert","error","signOut","localStorage","removeItem","navigateByUrl","_","i0","ɵɵdirectiveInject","i1","StorageService","i2","Router","_2","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","HomeComponent_Template_button_click_2_listener","ɵɵtext","ɵɵelementEnd","HomeComponent_Template_input_change_8_listener","$event","HomeComponent_Template_button_click_10_listener"],"sources":["C:\\Users\\Hafeez\\Desktop\\resume\\frontEnd\\src\\app\\home\\home.component.ts","C:\\Users\\Hafeez\\Desktop\\resume\\frontEnd\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {FormControl,FormGroup,Validators} from '@angular/forms'\nimport { StorageService } from '../service/storage.service';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  isUploadedAlready:boolean=false\n  selectedFile:any=null\n  constructor(private service:StorageService,private router:Router){\n  // service.isResumealreadyUploaded().subscribe(data=>{\n  //    this.isUploadedAlready=true\n  // })\n  }\n  onFileSelected(event:any){\n    console.log(event);\n    this.selectedFile=event.target.files[0]\n    \n  }\n\n \n\n  resumeForm=new FormGroup({\n    resume:new FormControl(\"\",Validators.required)\n  })\n\n  \n \n\n  Upload(){\n    const fd= new FormData();\n    fd.append('resume',this.selectedFile,this.selectedFile.name)\n    let data=this.resumeForm.value\n    this.service.uploadResume(fd).subscribe((result:any)=>{\n      alert('You resume succefully uploaded')\n      this.isUploadedAlready=true\n      ,\n      (error:any)=>{console.log(error);\n      }\n\n    })\n\n    \n  }\n\n  signOut(){\n    localStorage.removeItem('token')\n    this.router.navigateByUrl('login')\n  }\n \n\n}\n","<div class=\"container\">\n    <nav>\n        <button (click)=\"signOut()\" class=\"btn btn-primary\">Sign out</button>\n    </nav>\n    <div class=\"row\">\n        <div  class=\"col-lg-6 col-12 mt-5\">\n           \n            <label for=\"a\">Upload resume:</label>\n            <input  (change)=\"onFileSelected($event)\" type=\"file\" id=\"a\" class=\"form-control\">\n            <div class=\"d-grid gap-2 mt-5\">\n                <button type=\"button\" class=\"btn btn-primary\" (click)=\"Upload()\">Upload</button>\n            </div>\n      \n        </div>\n    </div>\n</div>\n\n"],"mappings":"AACA,SAAQA,WAAW,EAACC,SAAS,EAACC,UAAU,QAAO,gBAAgB;;;;AAU/D,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,OAAsB,EAASC,MAAa;IAA5C,KAAAD,OAAO,GAAPA,OAAO;IAAwB,KAAAC,MAAM,GAANA,MAAM;IAFzD,KAAAC,iBAAiB,GAAS,KAAK;IAC/B,KAAAC,YAAY,GAAK,IAAI;IAcrB,KAAAC,UAAU,GAAC,IAAIR,SAAS,CAAC;MACvBS,MAAM,EAAC,IAAIV,WAAW,CAAC,EAAE,EAACE,UAAU,CAACS,QAAQ;KAC9C,CAAC;IAdF;IACA;IACA;EACA;;EACAC,cAAcA,CAACC,KAAS;IACtBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IAClB,IAAI,CAACL,YAAY,GAACK,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAEzC;EAWAC,MAAMA,CAAA;IACJ,MAAMC,EAAE,GAAE,IAAIC,QAAQ,EAAE;IACxBD,EAAE,CAACE,MAAM,CAAC,QAAQ,EAAC,IAAI,CAACb,YAAY,EAAC,IAAI,CAACA,YAAY,CAACc,IAAI,CAAC;IAC5D,IAAIC,IAAI,GAAC,IAAI,CAACd,UAAU,CAACe,KAAK;IAC9B,IAAI,CAACnB,OAAO,CAACoB,YAAY,CAACN,EAAE,CAAC,CAACO,SAAS,CAAEC,MAAU,IAAG;MACpDC,KAAK,CAAC,gCAAgC,CAAC;MACvC,IAAI,CAACrB,iBAAiB,GAAC,IAAI,EAE1BsB,KAAS,IAAG;QAACf,OAAO,CAACC,GAAG,CAACc,KAAK,CAAC;MAChC,CAAC;IAEH,CAAC,CAAC;EAGJ;EAEAC,OAAOA,CAAA;IACLC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChC,IAAI,CAAC1B,MAAM,CAAC2B,aAAa,CAAC,OAAO,CAAC;EACpC;EAAC,QAAAC,CAAA,G;qBA1CU/B,aAAa,EAAAgC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAbtC,aAAa;IAAAuC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCX1Bb,EAAA,CAAAe,cAAA,aAAuB;QAEPf,EAAA,CAAAgB,UAAA,mBAAAC,+CAAA;UAAA,OAASH,GAAA,CAAAnB,OAAA,EAAS;QAAA,EAAC;QAAyBK,EAAA,CAAAkB,MAAA,eAAQ;QAAAlB,EAAA,CAAAmB,YAAA,EAAS;QAEzEnB,EAAA,CAAAe,cAAA,aAAiB;QAGMf,EAAA,CAAAkB,MAAA,qBAAc;QAAAlB,EAAA,CAAAmB,YAAA,EAAQ;QACrCnB,EAAA,CAAAe,cAAA,eAAkF;QAA1Ef,EAAA,CAAAgB,UAAA,oBAAAI,+CAAAC,MAAA;UAAA,OAAUP,GAAA,CAAArC,cAAA,CAAA4C,MAAA,CAAsB;QAAA,EAAC;QAAzCrB,EAAA,CAAAmB,YAAA,EAAkF;QAClFnB,EAAA,CAAAe,cAAA,aAA+B;QACmBf,EAAA,CAAAgB,UAAA,mBAAAM,gDAAA;UAAA,OAASR,GAAA,CAAA/B,MAAA,EAAQ;QAAA,EAAC;QAACiB,EAAA,CAAAkB,MAAA,cAAM;QAAAlB,EAAA,CAAAmB,YAAA,EAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}