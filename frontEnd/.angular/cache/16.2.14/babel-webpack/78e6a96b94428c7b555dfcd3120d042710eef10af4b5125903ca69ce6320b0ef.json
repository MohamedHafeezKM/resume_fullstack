{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/storage.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction HomeComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 3)(1, \"form\", 4);\n    i0.ɵɵlistener(\"ngSubmit\", function HomeComponent_div_2_Template_form_ngSubmit_1_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.Upload());\n    });\n    i0.ɵɵelementStart(2, \"label\", 5);\n    i0.ɵɵtext(3, \"Upload resume:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.resumeForm);\n  }\n}\nexport class HomeComponent {\n  constructor(service) {\n    this.service = service;\n    this.isUploadedAlready = false;\n    this.resumeForm = new FormGroup({\n      resume: new FormControl(\"\", Validators.required)\n    });\n    service.isResumealreadyUploaded().subscribe(data => {\n      this.isUploadedAlready = true;\n    });\n  }\n  Upload() {\n    let data = this.resumeForm.value;\n    this.service.uploadResume(data).subscribe(result => {\n      alert('You resume succefully uploaded');\n      this.isUploadedAlready = true, error => {\n        console.log(error);\n      };\n    });\n  }\n  static #_ = this.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.StorageService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[1, \"container\"], [1, \"row\"], [\"class\", \"col-6\", 4, \"ngIf\"], [1, \"col-6\"], [\"action\", \"\", 3, \"formGroup\", \"ngSubmit\"], [\"for\", \"a\"], [\"type\", \"file\", \"id\", \"a\", 1, \"form-control\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵtemplate(2, HomeComponent_div_2_Template, 5, 1, \"div\", 2);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isUploadedAlready == false);\n      }\n    },\n    dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","i0","ɵɵelementStart","ɵɵlistener","HomeComponent_div_2_Template_form_ngSubmit_1_listener","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","Upload","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty","ctx_r0","resumeForm","HomeComponent","constructor","service","isUploadedAlready","resume","required","isResumealreadyUploaded","subscribe","data","value","uploadResume","result","alert","error","console","log","_","ɵɵdirectiveInject","i1","StorageService","_2","selectors","decls","vars","consts","template","HomeComponent_Template","rf","ctx","ɵɵtemplate","HomeComponent_div_2_Template"],"sources":["C:\\Users\\Hafeez\\Desktop\\resume\\frontEnd\\src\\app\\home\\home.component.ts","C:\\Users\\Hafeez\\Desktop\\resume\\frontEnd\\src\\app\\home\\home.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport {FormControl,FormGroup,Validators} from '@angular/forms'\nimport { StorageService } from '../service/storage.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n  isUploadedAlready:boolean=false\n  constructor(private service:StorageService){\n  service.isResumealreadyUploaded().subscribe(data=>{\n     this.isUploadedAlready=true\n  })\n  }\n  resumeForm=new FormGroup({\n    resume:new FormControl(\"\",Validators.required)\n  })\n\n  Upload(){\n    let data=this.resumeForm.value\n    this.service.uploadResume(data).subscribe((result:any)=>{\n      alert('You resume succefully uploaded')\n      this.isUploadedAlready=true\n      ,\n      (error:any)=>{console.log(error);\n      }\n\n    })\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div *ngIf=\"isUploadedAlready==false\" class=\"col-6\">\n            <form [formGroup]=\"resumeForm\" (ngSubmit)=\"Upload()\" action=\"\">\n            <label for=\"a\">Upload resume:</label>\n            <input type=\"file\" id=\"a\" class=\"form-control\">\n            \n        </form>\n        </div>\n    </div>\n</div>\n"],"mappings":"AACA,SAAQA,WAAW,EAACC,SAAS,EAACC,UAAU,QAAO,gBAAgB;;;;;;;;ICCvDC,EAAA,CAAAC,cAAA,aAAoD;IACjBD,EAAA,CAAAE,UAAA,sBAAAC,sDAAA;MAAAH,EAAA,CAAAI,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAN,EAAA,CAAAO,aAAA;MAAA,OAAYP,EAAA,CAAAQ,WAAA,CAAAF,MAAA,CAAAG,MAAA,EAAQ;IAAA,EAAC;IACpDT,EAAA,CAAAC,cAAA,eAAe;IAAAD,EAAA,CAAAU,MAAA,qBAAc;IAAAV,EAAA,CAAAW,YAAA,EAAQ;IACrCX,EAAA,CAAAY,SAAA,eAA+C;IAEnDZ,EAAA,CAAAW,YAAA,EAAO;;;;IAJGX,EAAA,CAAAa,SAAA,GAAwB;IAAxBb,EAAA,CAAAc,UAAA,cAAAC,MAAA,CAAAC,UAAA,CAAwB;;;ADO1C,OAAM,MAAOC,aAAa;EAExBC,YAAoBC,OAAsB;IAAtB,KAAAA,OAAO,GAAPA,OAAO;IAD3B,KAAAC,iBAAiB,GAAS,KAAK;IAM/B,KAAAJ,UAAU,GAAC,IAAIlB,SAAS,CAAC;MACvBuB,MAAM,EAAC,IAAIxB,WAAW,CAAC,EAAE,EAACE,UAAU,CAACuB,QAAQ;KAC9C,CAAC;IANFH,OAAO,CAACI,uBAAuB,EAAE,CAACC,SAAS,CAACC,IAAI,IAAE;MAC/C,IAAI,CAACL,iBAAiB,GAAC,IAAI;IAC9B,CAAC,CAAC;EACF;EAKAX,MAAMA,CAAA;IACJ,IAAIgB,IAAI,GAAC,IAAI,CAACT,UAAU,CAACU,KAAK;IAC9B,IAAI,CAACP,OAAO,CAACQ,YAAY,CAACF,IAAI,CAAC,CAACD,SAAS,CAAEI,MAAU,IAAG;MACtDC,KAAK,CAAC,gCAAgC,CAAC;MACvC,IAAI,CAACT,iBAAiB,GAAC,IAAI,EAE1BU,KAAS,IAAG;QAACC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MAChC,CAAC;IAEH,CAAC,CAAC;EACJ;EAAC,QAAAG,CAAA,G;qBArBUhB,aAAa,EAAAjB,EAAA,CAAAkC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAbpB,aAAa;IAAAqB,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,uBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCV1B5C,EAAA,CAAAC,cAAA,aAAuB;QAEfD,EAAA,CAAA8C,UAAA,IAAAC,4BAAA,iBAMM;QACV/C,EAAA,CAAAW,YAAA,EAAM;;;QAPIX,EAAA,CAAAa,SAAA,GAA8B;QAA9Bb,EAAA,CAAAc,UAAA,SAAA+B,GAAA,CAAAzB,iBAAA,UAA8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}